#alias sqlplus='env -u NLS_LANG sqlplus'
alias lt="ls -ltra"
if [[ `uname -a` =~ Darwin ]]; then
    alias ls="ls -FCG"
else
    alias ls="ls -FC --color"
fi
alias ll="ls -l"
alias l='ls -la'
alias rm="rm -i"
alias llast='less `ls -tr1 | tail -1`'
#alias splitmp3="mp3splt -a -t 5.0 -d split_files -o @n_@f"
alias splitmp3="mp3splt -a -t 5.0 -o @f/@n"
# better to use an ackrc
#alias ack="ack --all --follow --ignore-dir data --ignore-dir images"


# Version Control
alias sdl='git diff master --no-prefix | diff_painter.pl | less -R'
#alias gdl='git diff --no-prefix | diff_painter.pl | less -R'
alias gdl='git diff --color-words'
alias gst='git status'
alias grh='git fetch upstream; git reset --hard'
alias viall='vi `git diff --name-only HEAD`';
alias paintless='diff_painter.pl | less -R'
alias gco='git co'
alias gph='git push origin HEAD'

# Show most used commands that might be good candidates for aliases
alias mu='history | cut -d " " -f3 | sort | uniq -c | sort -nr | head -50'

# Compress the cd, ls -l series of commands.
alias lc='cl'
function cl () {
   if [ $# = 0 ]; then
      cd && ll
   else
      cd "$*" && ll
   fi
}

# Change directory up
alias         ..='cd ..'
alias        ...='cd ../..'
alias       ....='cd ../../..'
alias      .....='cd ../../../..'
alias     ......='cd ../../../../..'
alias    .......='cd ../../../../../..'
alias   ........='cd ../../../../../../..'
alias  .........='cd ../../../../../../../..'
alias ..........='cd ../../../../../../../../..'

# dir sizes summarized and sorted
alias dus='du -sm * .[a-zA-Z0-9]*/ | sort -n'

# -a archive preserves permissions, times etc -vv double verbose -P partial files okay and progress indicator --remove-soure-files removes files but not empty directories
alias mvrsync='rsync -avvP --remove-source-files'

# newly updated files in the last 5 minutes
alias nf='find . -cmin -5 -ls'

# sudo on both OSX and Ubuntu strip the environment variables
alias puppetsudo="sudo env RUBYLIB=$RUBYLIB PATH=$PATH MCOLLECTIVE_EXTRA_OPTS=$MCOLLECTIVE_EXTRA_OPTS"

# Most frequent committers
alias gitcommiters="git ls-files | xargs -n1 git blame | ruby -n -e \"$_ =~ /^.*\((.*?)\s[\d]{4}/; puts $1.strip\" | sort -f | uniq -c | sort -n"

# I always forget the damned flags for this
alias untargz="tar zxf"

# Saving test output comes in handy
alias testme='dt=`date +%Y%m%d_%H_%M`; spec --color spec/**/*_spec.rb > spec_results_$dt &'

function tt () # tree top
{
    cwd=$(pwd)
    path_before_work=${cwd%/work/*}
    path_after_work=${cwd#*/work/}
    dir_within_work=${path_after_work%%/*}
    echo $path_before_work/work/$dir_within_work
}

function cdtt
{
    cd $(tt)
}

alias drivespeed='dd if=/dev/zero of=test.file bs=1024k count=128 && rm -f test.file'
alias diary="dt=`date +%Y%m%d_%H_%M`; encfs ~/.encrypted ~/encrypted; vim ~/encrypted/diary_${dt}; fusermount -u ~/encrypted"


function tj () # tmux join-pane vertical
{
    tmux join-pane -s ${1}.0 -h
}

function tjh () # tmux join-pane horizontal
{
    tmux join-pane -s ${1}.0
}

alias gcot='git-checkout-by-match'
alias gbd='git-delete-ticket-branch'
alias f='find . | grep'
alias remove-trailing-whitespace='perl -p -i -e "s/\s+\n$/\n/g" `find . -type f | grep -v .git`'
alias evilchrome='open -b com.google.chrome --args --disable-web-security'
alias vi='vim'
if command -v mvim >/dev/null 2>&1; then
  alias vim="mvim -v"
fi
alias historybackup="NAME=$HOME/backup/.zsh_history_`hostname`_`date +'%Y%m%d'`.gz.gpg; gzip -c ~/.zsh_history | gpg --encrypt -r C2620DCC > $NAME && ln -fs $NAME ~/backup/.zsh_history.gz.gpg && rsync -avz ~/backup matt@mmrobins.com:~"
alias historyrestore="rsync -avz matt@mmrobins.com:~/backup/.zsh_history.gz.gpg /tmp/ && gpg --decrypt /tmp/.zsh_history.gz.gpg | gunzip > ~/.zsh_history.restored && echo 'restored to ~/.zsh_history.restored'"
alias be='bundle exec'
# otherwise zsh can't pass rake arguments
# errors with zsh: no matches found
#alias rake='noglob rake'
function zh(){
  ack "$1" ~/.zsh_history
}
# close, but not quite to get dates instead of timestamps
#zh "tree.*build" | sed "s/^: \([0-9]*\):.;\(.*\)$/`date -r \1 +%Y%m%d-%H:%M` \2/"

alias bi='(bundle check || bundle --local --jobs=4 || bundle --jobs=4)'

function vpn() {
  if ! ifconfig | grep -q utun0
  then
  osascript <<-END_SCRIPT
  tell application "System Events"
     tell current location of network preferences
         set VPNservice to service "Techops Tools VPN"
         if exists VPNservice then connect VPNservice
     end tell
  end tell
END_SCRIPT
  while ! ifconfig |grep -q utun0
  do
    sleep 2
  done
  fi
}
#alias ssh='vpn; command ssh'
alias wip='git add -A && git commit -m "wip"'
alias wtc='git add -A && git commit -m "`curl whatthecommit.com/index.txt`"'
# mavericks and el capitan
alias raccoondance='sudo launchctl stop com.apple.racoon; dscacheutil -flushcache; sudo killall -HUP mDNSResponder; sudo launchctl start com.apple.racoon'
# yosemite
#alias raccoondance='sudo launchctl stop com.apple.racoon; sudo discoveryutil mdnsflushcache; sudo discoveryutil udnsflushcaches; sudo launchctl start com.apple.racoon'

alias dobby='ssh -t dobby@app-shell01.iad.livingsocial.net ssh '

alias dockerclean='docker rm $(docker ps -a -q); docker rmi $(docker images -q --filter "dangling=true")'
alias fixcamera='sudo killall VDCAssistant' # when hangouts just won't see the camera this fixes it

alias ssh-start='eval $(/usr/bin/keychain --eval --agents ssh -Q --quiet ~/.ssh/id_rsa)'
command -v pbcopy > /dev/null 2>&1 || alias pbcopy='xclip -selection clipboard'
command -v pbpaste > /dev/null 2>&1 || alias pbpaste='xclip -selection clipboard -o'
alias clegane='git diff `git merge-base origin/master HEAD` --name-only | xargs -I {} rubocop --auto-correct {}'

# kubernetes
alias k="kubectl"
alias kd="kubectl --context=dev"
alias kp="kubectl --context=prod"

# docker
alias dc="docker-compose"
alias dcr="docker-compose run"

# Quickly display / switch Kubernetes contexts
function kcsc
{
  local context=${1}
  if [[ -z "$context" ]]; then
    kubectl config get-contexts
  else
    kubectl config use-context ${context}
  fi
}

# Quickly display / switch Kubernetes namespaces
function kcns
{
  local namespace=${1}
  if [[ -z "$namespace" ]]; then
    kubectl get ns
  else
    local context=$(kubectl config current-context)
    echo "Setting context ${context} to namespace ${namespace}..."
    kubectl config set-context ${context} --namespace ${namespace}
  fi
}

function kcapacity {
for node in $(kubectl get no --no-headers | awk '$0 !~ /Disabled/ {print $1}'); do
  echo -n "Node ${node} - "
  kubectl describe no $node \
    | grep -A4 'Allocated resources' \
    | tail -n1 \
    | awk '{print "CPU Requests " $1 " " $2 " Memory Requests: " $5 " " $6}'
  done
}

alias dt="docker-compose run tests"

function kdpod
{
  kd get pods -l deployment=$1 -o name | head -n 1 | sed -e 's/pods\///'
}

function kppod
{
  kp get pods -l deployment=$1 -o name | head -n 1 | sed -e 's/pods\///'
}

alias tf="cd ~/sfwork/trailhead-terraform"
